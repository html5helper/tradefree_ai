#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

usage() {
    cat <<EOF
Usage: $0 <process_name>
Example: $0 "uvicorn ai.core.celery_api:api"
EOF
    exit 1
}

if [[ $# -ne 1 ]]; then
    usage
fi

PROCESS_NAME="$1"

# Êü•ÊâæÊâÄÊúâÂåπÈÖçÁöÑ PIDÔºåpgrep ÊØèË°åËæìÂá∫‰∏Ä‰∏™ PID
# Â¶ÇÊûú pgrep ËøîÂõûÈùûÈõ∂ÔºåÂàôÁî® || true ‰øùËØÅËÑöÊú¨‰∏ç‰∏≠Êñ≠
PIDS=( $(pgrep -f -- "${PROCESS_NAME}" || true) )

if [[ ${#PIDS[@]} -eq 0 ]]; then
    echo "‚ùå No process found matching: ${PROCESS_NAME}"
    exit 1
fi

echo "üîç Found process IDs: ${PIDS[*]}"

# ÂÖàÂ∞ùËØïÊ≠£Â∏∏ÁªàÊ≠¢
echo "‚öôÔ∏è  Sending SIGTERM to: ${PIDS[*]}"
if kill "${PIDS[@]}"; then
    echo "‚è≥ Waiting for processes to exit..."
    sleep 3
else
    echo "‚ö†Ô∏è  Failed to send SIGTERM, will try SIGKILL shortly."
fi

# Ê£ÄÊü•ÊòØÂê¶‰ªçÊúâÂ≠òÊ¥ª
ALIVE=( $(pgrep -f -- "${PROCESS_NAME}" || true) )

if [[ ${#ALIVE[@]} -gt 0 ]]; then
    echo "üö® Processes still alive: ${ALIVE[*]}"
    echo "üî™ Sending SIGKILL to: ${ALIVE[*]}"
    kill -9 "${ALIVE[@]}"
    sleep 1
    # ÊúÄÂêéÁ°ÆËÆ§
    if pgrep -f -- "${PROCESS_NAME}" > /dev/null; then
        echo "‚ùå Failed to kill: ${PROCESS_NAME}"
        exit 1
    else
        echo "‚úÖ Processes killed with SIGKILL."
    fi
else
    echo "‚úÖ Processes exited cleanly."
fi